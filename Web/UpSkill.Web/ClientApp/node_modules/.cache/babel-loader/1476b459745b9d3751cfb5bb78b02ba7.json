{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SET_WARNING_MESSAGE, CLEAR_MESSAGE, REFRESH_TOKEN } from \"../actions/types\";\nimport { AdministratorRoleName, CompanyOwnerRoleName, EmployeeRoleName } from '../utils/webConstants';\n\nconst user = () => JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isAdmin: false,\n  isCompanyOwner: false,\n  isEmployee: false\n};\nexport default function Auth(init = initialState, action) {\n  var _user, _user2, _user3, _user4, _user5, _user6, _user7, _user8, _user9;\n\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: true,\n        user: user(),\n        isAdmin: ((_user = user()) === null || _user === void 0 ? void 0 : _user.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user2 = user()) === null || _user2 === void 0 ? void 0 : _user2.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user3 = user()) === null || _user3 === void 0 ? void 0 : _user3.role) === EmployeeRoleName\n      };\n\n    case REGISTER_FAIL:\n      return {\n        state: 'opened',\n        type: 'error',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: true,\n        user: user(),\n        isAdmin: ((_user4 = user()) === null || _user4 === void 0 ? void 0 : _user4.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user5 = user()) === null || _user5 === void 0 ? void 0 : _user5.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user6 = user()) === null || _user6 === void 0 ? void 0 : _user6.role) === EmployeeRoleName\n      };\n\n    case LOGIN_FAIL:\n      return {\n        state: 'opened',\n        type: 'error',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGOUT:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case SET_WARNING_MESSAGE:\n      return {\n        state: 'opened',\n        type: 'warning',\n        message: payload.message,\n        link: payload.link\n      };\n\n    case CLEAR_MESSAGE:\n      return {\n        state: 'closed',\n        type: '',\n        message: ''\n      };\n\n    case CHECK_CURRENT_STATE:\n      return {\n        state: 'closed',\n        type: '',\n        message: '',\n        isLoggedIn: user() ? true : false,\n        user: user(),\n        isAdmin: ((_user7 = user()) === null || _user7 === void 0 ? void 0 : _user7.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user8 = user()) === null || _user8 === void 0 ? void 0 : _user8.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user9 = user()) === null || _user9 === void 0 ? void 0 : _user9.role) === EmployeeRoleName\n      };\n\n    case REFRESH_TOKEN:\n      return { ...init,\n        user: { ...user,\n          accessToken: payload\n        }\n      };\n\n    default:\n      return init;\n  }\n}\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_WARNING_MESSAGE","CLEAR_MESSAGE","REFRESH_TOKEN","AdministratorRoleName","CompanyOwnerRoleName","EmployeeRoleName","user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","isAdmin","isCompanyOwner","isEmployee","Auth","init","action","type","payload","state","message","role","link","CHECK_CURRENT_STATE","accessToken"],"mappings":"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","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  SET_WARNING_MESSAGE,\r\n  CLEAR_MESSAGE,\r\n  REFRESH_TOKEN\r\n} from \"../actions/types\";\r\n\r\nimport {\r\n  AdministratorRoleName,\r\n  CompanyOwnerRoleName,\r\n  EmployeeRoleName,\r\n} from '../utils/webConstants';\r\n\r\nconst user = () => JSON.parse(localStorage.getItem(\"user\"));\r\n\r\nconst initialState =  { \r\n      isLoggedIn: false,\r\n      user: null,\r\n      isAdmin: false,\r\n      isCompanyOwner: false,\r\n      isEmployee: false\r\n    };\r\n\r\nexport default function Auth(init = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' , \r\n        message: payload, \r\n        isLoggedIn: true,        \r\n        user: user(),\r\n        isAdmin: user()?.role === AdministratorRoleName,\r\n        isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n        isEmployee: user()?.role===EmployeeRoleName,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        state: 'opened', \r\n        type: 'error' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };      \r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' ,\r\n        message: payload,\r\n        isLoggedIn: true,        \r\n        user: user(),\r\n        isAdmin: user()?.role === AdministratorRoleName,\r\n        isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n        isEmployee: user()?.role===EmployeeRoleName,\r\n      }; \r\n    case LOGIN_FAIL:\r\n      return {\r\n        state: 'opened', \r\n        type: 'error' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,        \r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n      case SET_WARNING_MESSAGE:\r\n        return {\r\n          state: 'opened', \r\n          type: 'warning' ,\r\n          message: payload.message,\r\n          link: payload.link,\r\n        };\r\n    case CLEAR_MESSAGE:\r\n        return {\r\n          state: 'closed',\r\n          type: '' ,\r\n          message: '',\r\n        }; \r\n    case CHECK_CURRENT_STATE:\r\n        return {\r\n          state: 'closed',\r\n          type: '' ,\r\n          message: '',\r\n          isLoggedIn: user() ? true : false,\r\n          user: user(),\r\n          isAdmin: user()?.role === AdministratorRoleName,\r\n          isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n          isEmployee: user()?.role===EmployeeRoleName,\r\n        }; \r\n   \r\n      case REFRESH_TOKEN:\r\n      return {\r\n        ...init,\r\n        user: { ...user, accessToken: payload },\r\n      };\r\n      default:\r\n        return init;\r\n  \r\n  }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}