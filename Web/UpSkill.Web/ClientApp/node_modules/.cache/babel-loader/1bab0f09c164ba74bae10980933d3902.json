{"ast":null,"code":"import { getCoachesNames } from \"./coachService\";\nimport { getCategoriesForCourses } from \"./categoryService\";\nimport { Base_URL } from \"../utils/baseUrlConstant\";\nconst numberCoursesToShow = 6;\n\nconst axios = require(\"axios\");\n\nconst API_URL = Base_URL + \"Admin/Courses\";\nconst token = localStorage.getItem(\"token\");\nconst initialCourses = [{\n  id: \"21312asdsa123\",\n  title: \"Marketing\",\n  coachName: \"Jim Wilber\",\n  description: \"First steps into Marketing\",\n  price: 50.0,\n  categoryId: 1,\n  coachId: 2,\n  categoryName: \"Marketing\",\n  imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\"\n}, {\n  id: \"321313adasd\",\n  title: \"Design\",\n  coachName: \"Tom Smith\",\n  description: \"You wil learn basic Design principles...\",\n  price: 60,\n  categoryId: 1,\n  coachId: 1,\n  categoryName: \"Marketing\",\n  imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\"\n}, {\n  id: \"3242432324\",\n  title: \"Management\",\n  coachName: \"Sarah Coleman\",\n  description: \"You will aquire basic management knowledge...\",\n  price: 80,\n  categoryId: 1,\n  coachId: 2,\n  categoryName: \"Marketing\",\n  imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\"\n}, {\n  id: \"32424324\",\n  title: \"Management\",\n  coachName: \"Sarah Coleman\",\n  description: \"You will aquire basic management knowledge...\",\n  price: 80,\n  categoryId: 1,\n  coachId: 2,\n  imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\n  categoryName: \"Design\"\n}, {\n  id: \"324324\",\n  title: \"Management\",\n  coachId: 2,\n  coachName: \"Sarah Coleman\",\n  description: \"You will aquire basic management knowledge...\",\n  price: 80,\n  categoryId: 1,\n  categoryName: \"Art\",\n  imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\"\n}];\nexport const getCourses = async currentPage => {\n  let arr = [];\n  const resp = await axios.get(API_URL + \"/getAll\", {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  let respData = resp.data;\n  arr.push(...respData.slice(0, currentPage * numberCoursesToShow + numberCoursesToShow));\n  return respData;\n};\nexport const getCourseDetails = async id => {\n  try {\n    const resp = await axios.get(API_URL + \"/details?id=\" + id, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    let respData = resp.data;\n    return respData;\n  } catch (error) {}\n}; //Get the real data from Db\n// export const getCoursesDb = async () => {\n//   let returnCourses = [];\n//   try {\n//     let returnCoaches = [];\n//     let returnCourse = {};\n//     let returnCategories = [];\n//     getCategoriesForCourses().then((categories) => {\n//       categories.forEach((ca) => returnCategories.push(ca));\n//     });\n//     getCoachesNames().then((coaches) =>\n//       coaches.forEach((c) => returnCoaches.push(c))\n//     );\n//     console.log(returnCategories);\n//     console.log(returnCoaches);\n//     const resp = await axios.get(API_URL+\"/getAll\");\n//     let respData = resp.data;\n//     console.log(respData);\n//     respData.map((c) => {\n//       returnCourse = c;\n//       console.log(returnCourse);\n//       let currentCoach = returnCoaches.find(\n//         (c) => c.value == returnCourse.coachId\n//       );\n//       if (currentCoach) {\n//         returnCourse[\"coachName\"] = currentCoach.label;\n//       }\n//       let currentCategory = returnCategories.find(\n//         (ca) => ca.value == returnCourse.categoryId\n//       );\n//       if (currentCategory) {\n//         returnCourse[\"categoryName\"] = currentCategory.label;\n//       }\n//       returnCourses.push(returnCourse);\n//     });\n//     return returnCourses;\n//   } catch (error) {}\n// };\n\nexport const addCourses = async course => {\n  let fd = new FormData();\n  fd.append(\"Title\", course.title);\n  fd.append(\"Description\", course.description);\n  fd.append(\"Price\", course.price);\n  fd.append(\"CoachId\", course.coachId);\n  fd.append(\"CategoryId\", course.categoryId);\n  fd.append(\"File\", course.file);\n\n  try {\n    const resp = await axios.post(API_URL, fd, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return resp;\n  } catch (err) {}\n};\nexport const updateCourses = async course => {\n  let fd = new FormData();\n  fd.append(\"Title\", course.title);\n  fd.append(\"Description\", course.description);\n  fd.append(\"Price\", course.price);\n  fd.append(\"CoachId\", course.coachId);\n  fd.append(\"CategoryId\", course.categoryId);\n  fd.append(\"File\", course.file);\n\n  try {\n    const resp = await axios.put(API_URL + \"?id=\" + course.id, fd, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return resp;\n  } catch (err) {}\n};\nexport const deleteCourses = async id => {\n  try {\n    const resp = await axios.delete(API_URL + \"?id=\" + id, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return resp;\n  } catch (err) {}\n};","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/adminCourseService.js"],"names":["getCoachesNames","getCategoriesForCourses","Base_URL","numberCoursesToShow","axios","require","API_URL","token","localStorage","getItem","initialCourses","id","title","coachName","description","price","categoryId","coachId","categoryName","imageUrl","getCourses","currentPage","arr","resp","get","headers","Authorization","respData","data","push","slice","getCourseDetails","error","addCourses","course","fd","FormData","append","file","post","err","updateCourses","put","deleteCourses","delete"],"mappings":"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","sourcesContent":["import { getCoachesNames } from \"./coachService\";\r\nimport { getCategoriesForCourses } from \"./categoryService\";\r\n\r\nimport { Base_URL } from \"../utils/baseUrlConstant\";\r\n\r\nconst numberCoursesToShow = 6;\r\n\r\nconst axios = require(\"axios\");\r\n\r\nconst API_URL = Base_URL + \"Admin/Courses\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nconst initialCourses = [\r\n  {\r\n    id: \"21312asdsa123\",\r\n    title: \"Marketing\",\r\n    coachName: \"Jim Wilber\",\r\n    description: \"First steps into Marketing\",\r\n    price: 50.0,\r\n    categoryId: 1,\r\n    coachId: 2,\r\n    categoryName: \"Marketing\",\r\n    imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\r\n  },\r\n  {\r\n    id: \"321313adasd\",\r\n    title: \"Design\",\r\n    coachName: \"Tom Smith\",\r\n    description: \"You wil learn basic Design principles...\",\r\n    price: 60,\r\n    categoryId: 1,\r\n    coachId: 1,\r\n    categoryName: \"Marketing\",\r\n    imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\r\n  },\r\n  {\r\n    id: \"3242432324\",\r\n    title: \"Management\",\r\n    coachName: \"Sarah Coleman\",\r\n    description: \"You will aquire basic management knowledge...\",\r\n    price: 80,\r\n    categoryId: 1,\r\n    coachId: 2,\r\n    categoryName: \"Marketing\",\r\n    imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\r\n  },\r\n  {\r\n    id: \"32424324\",\r\n    title: \"Management\",\r\n    coachName: \"Sarah Coleman\",\r\n    description: \"You will aquire basic management knowledge...\",\r\n    price: 80,\r\n    categoryId: 1,\r\n    coachId: 2,\r\n    imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\r\n    categoryName: \"Design\",\r\n  },\r\n  {\r\n    id: \"324324\",\r\n    title: \"Management\",\r\n    coachId: 2,\r\n    coachName: \"Sarah Coleman\",\r\n    description: \"You will aquire basic management knowledge...\",\r\n    price: 80,\r\n    categoryId: 1,\r\n    categoryName: \"Art\",\r\n    imageUrl: \"https://i.ibb.co/9Twgqz8/Rectangle-1221.png\",\r\n  },\r\n];\r\n\r\nexport const getCourses = async (currentPage) => {\r\n  let arr = [];\r\n  const resp = await axios.get(API_URL + \"/getAll\", {\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n  let respData = resp.data;\r\n  arr.push(\r\n    ...respData.slice(\r\n      0,\r\n      currentPage * numberCoursesToShow + numberCoursesToShow\r\n    )\r\n  );\r\n\r\n  return respData;\r\n};\r\n\r\nexport const getCourseDetails = async (id) => {\r\n  try {\r\n    const resp = await axios.get(API_URL + \"/details?id=\" + id, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    let respData = resp.data;\r\n    return respData;\r\n  } catch (error) {}\r\n};\r\n\r\n//Get the real data from Db\r\n\r\n// export const getCoursesDb = async () => {\r\n//   let returnCourses = [];\r\n//   try {\r\n//     let returnCoaches = [];\r\n//     let returnCourse = {};\r\n\r\n//     let returnCategories = [];\r\n\r\n//     getCategoriesForCourses().then((categories) => {\r\n//       categories.forEach((ca) => returnCategories.push(ca));\r\n//     });\r\n\r\n//     getCoachesNames().then((coaches) =>\r\n//       coaches.forEach((c) => returnCoaches.push(c))\r\n//     );\r\n\r\n//     console.log(returnCategories);\r\n//     console.log(returnCoaches);\r\n\r\n//     const resp = await axios.get(API_URL+\"/getAll\");\r\n//     let respData = resp.data;\r\n//     console.log(respData);\r\n\r\n//     respData.map((c) => {\r\n//       returnCourse = c;\r\n//       console.log(returnCourse);\r\n//       let currentCoach = returnCoaches.find(\r\n//         (c) => c.value == returnCourse.coachId\r\n//       );\r\n\r\n//       if (currentCoach) {\r\n//         returnCourse[\"coachName\"] = currentCoach.label;\r\n//       }\r\n\r\n//       let currentCategory = returnCategories.find(\r\n//         (ca) => ca.value == returnCourse.categoryId\r\n//       );\r\n\r\n//       if (currentCategory) {\r\n//         returnCourse[\"categoryName\"] = currentCategory.label;\r\n//       }\r\n//       returnCourses.push(returnCourse);\r\n//     });\r\n\r\n//     return returnCourses;\r\n//   } catch (error) {}\r\n// };\r\n\r\nexport const addCourses = async (course) => {\r\n  let fd = new FormData();\r\n  fd.append(\"Title\", course.title);\r\n  fd.append(\"Description\", course.description);\r\n  fd.append(\"Price\", course.price);\r\n  fd.append(\"CoachId\", course.coachId);\r\n  fd.append(\"CategoryId\", course.categoryId);\r\n  fd.append(\"File\", course.file);\r\n\r\n  try {\r\n    const resp = await axios.post(API_URL, fd, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return resp;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const updateCourses = async (course) => {\r\n  let fd = new FormData();\r\n  fd.append(\"Title\", course.title);\r\n  fd.append(\"Description\", course.description);\r\n  fd.append(\"Price\", course.price);\r\n  fd.append(\"CoachId\", course.coachId);\r\n  fd.append(\"CategoryId\", course.categoryId);\r\n  fd.append(\"File\", course.file);\r\n\r\n  try {\r\n    const resp = await axios.put(API_URL + \"?id=\" + course.id, fd, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return resp;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const deleteCourses = async (id) => {\r\n  try {\r\n    const resp = await axios.delete(API_URL + \"?id=\" + id, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    return resp;\r\n  } catch (err) {}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}