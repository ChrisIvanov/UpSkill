{"ast":null,"code":"import axios from \"axios\";\nimport { Base_URL } from '../utils/baseUrlConstant';\nconst API_URL = Base_URL + \"Owner/Courses/\";\nconst token = localStorage.getItem('token');\nlet data = [];\n\nconst getCourses = async (courseId, courseTitle, courseCoachFirstName, courseCoachLastName, courseFileFilePath) => {\n  return await axios.get(API_URL + \"getactivecourses\", {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }, {\n    courseId,\n    courseTitle,\n    courseCoachFirstName,\n    courseCoachLastName,\n    courseFileFilePath\n  }).then(response => {\n    data = response.data;\n    console.log(data);\n    return data;\n  });\n};\n\nconst getAvailableCourses = async (courseId, courseTitle, courseCoachFirstName, courseCoachLastName, courseFileFilePath) => {\n  return await axios.get(API_URL + \"getavailablecourses\", {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  }, {\n    courseId,\n    courseTitle,\n    courseCoachFirstName,\n    courseCoachLastName,\n    courseFileFilePath\n  }).then(response => {\n    data = response.data;\n    return data;\n  });\n};\n\nconst enableCourse = async courseId => {\n  await axios.put(API_URL + \"enable?id=\" + courseId, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n};\n\nconst disableCourse = async courseId => {\n  await axios.delete(API_URL + \"disable?id=\" + courseId, {\n    headers: {\n      \"Authorization\": `Bearer ${token}`\n    }\n  });\n};\n\nconst serviceActions = {\n  enableCourse,\n  disableCourse,\n  getCourses,\n  getAvailableCourses\n};\nexport default serviceActions;","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/ownerCoursesService.js"],"names":["axios","Base_URL","API_URL","token","localStorage","getItem","data","getCourses","courseId","courseTitle","courseCoachFirstName","courseCoachLastName","courseFileFilePath","get","headers","then","response","console","log","getAvailableCourses","enableCourse","put","disableCourse","delete","serviceActions"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,MAAMC,OAAO,GAAGD,QAAQ,GAAG,gBAA3B;AACA,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,IAAIC,IAAI,GAAG,EAAX;;AAEA,MAAMC,UAAU,GAAG,OAAOC,QAAP,EAAiBC,WAAjB,EAA8BC,oBAA9B,EAAoDC,mBAApD,EAAyEC,kBAAzE,KAAgG;AAC/G,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUX,OAAO,GAAG,kBAApB,EAAwC;AAAEY,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASX,KAAM;AAAnC;AAAX,GAAxC,EAA6F;AACtGK,IAAAA,QADsG;AAEtGC,IAAAA,WAFsG;AAGtGC,IAAAA,oBAHsG;AAItGC,IAAAA,mBAJsG;AAKtGC,IAAAA;AALsG,GAA7F,EAORG,IAPQ,CAOFC,QAAD,IAAc;AAChBV,IAAAA,IAAI,GAAGU,QAAQ,CAACV,IAAhB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,WAAOA,IAAP;AACH,GAXQ,CAAb;AAYH,CAbD;;AAeA,MAAMa,mBAAmB,GAAG,OAAOX,QAAP,EAAiBC,WAAjB,EAA8BC,oBAA9B,EAAoDC,mBAApD,EAAyEC,kBAAzE,KAAgG;AACxH,SAAO,MAAMZ,KAAK,CAACa,GAAN,CAAUX,OAAO,GAAG,qBAApB,EAA2C;AAAEY,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASX,KAAM;AAAnC;AAAX,GAA3C,EAAgG;AACzGK,IAAAA,QADyG;AAEzGC,IAAAA,WAFyG;AAGzGC,IAAAA,oBAHyG;AAIzGC,IAAAA,mBAJyG;AAKzGC,IAAAA;AALyG,GAAhG,EAORG,IAPQ,CAOFC,QAAD,IAAc;AAChBV,IAAAA,IAAI,GAAGU,QAAQ,CAACV,IAAhB;AACA,WAAOA,IAAP;AACH,GAVQ,CAAb;AAWH,CAZD;;AAaA,MAAMc,YAAY,GAAG,MAAOZ,QAAP,IAAoB;AACrC,QAAMR,KAAK,CAACqB,GAAN,CAAUnB,OAAO,GAAG,YAAV,GAAyBM,QAAnC,EAA6C;AAAEM,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASX,KAAM;AAAnC;AAAX,GAA7C,CAAN;AACH,CAFD;;AAGA,MAAMmB,aAAa,GAAG,MAAOd,QAAP,IAAoB;AACtC,QAAMR,KAAK,CAACuB,MAAN,CAAarB,OAAO,GAAG,aAAV,GAA0BM,QAAvC,EAAiD;AAAEM,IAAAA,OAAO,EAAE;AAAE,uBAAkB,UAASX,KAAM;AAAnC;AAAX,GAAjD,CAAN;AACH,CAFD;;AAIA,MAAMqB,cAAc,GAAG;AACnBJ,EAAAA,YADmB;AAEnBE,EAAAA,aAFmB;AAGnBf,EAAAA,UAHmB;AAInBY,EAAAA;AAJmB,CAAvB;AAOA,eAAeK,cAAf","sourcesContent":["import axios from \"axios\"\r\nimport { Base_URL } from '../utils/baseUrlConstant';\r\nconst API_URL = Base_URL + \"Owner/Courses/\";\r\nconst token = localStorage.getItem('token');\r\nlet data = [];\r\n\r\nconst getCourses = async (courseId, courseTitle, courseCoachFirstName, courseCoachLastName, courseFileFilePath) => {\r\n    return await axios.get(API_URL + \"getactivecourses\", { headers: { \"Authorization\": `Bearer ${token}` } }, {\r\n        courseId,\r\n        courseTitle,\r\n        courseCoachFirstName,\r\n        courseCoachLastName,\r\n        courseFileFilePath,\r\n    })\r\n        .then((response) => {\r\n            data = response.data\r\n            console.log(data);\r\n            return data;\r\n        });\r\n};\r\n\r\nconst getAvailableCourses = async (courseId, courseTitle, courseCoachFirstName, courseCoachLastName, courseFileFilePath) => {\r\n    return await axios.get(API_URL + \"getavailablecourses\", { headers: { \"Authorization\": `Bearer ${token}` } }, {\r\n        courseId,\r\n        courseTitle,\r\n        courseCoachFirstName,\r\n        courseCoachLastName,\r\n        courseFileFilePath,\r\n    })\r\n        .then((response) => {\r\n            data = response.data\r\n            return data;\r\n        });\r\n};\r\nconst enableCourse = async (courseId) => {\r\n    await axios.put(API_URL + \"enable?id=\" + courseId, { headers: { \"Authorization\": `Bearer ${token}` } });\r\n};\r\nconst disableCourse = async (courseId) => {\r\n    await axios.delete(API_URL + \"disable?id=\" + courseId, { headers: { \"Authorization\": `Bearer ${token}` } });\r\n};\r\n\r\nconst serviceActions = {\r\n    enableCourse,\r\n    disableCourse,\r\n    getCourses,\r\n    getAvailableCourses\r\n};\r\n\r\nexport default serviceActions;\r\n"]},"metadata":{},"sourceType":"module"}