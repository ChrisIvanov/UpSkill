{"ast":null,"code":"var _user, _user2, _user3;\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_MESSAGE, CHECK_CURRENT_STATE } from \"../actions/types\";\nimport { AdministratorRoleName, CompanyOwnerRoleName, EmployeeRoleName } from '../utils/webConstants';\n\nconst user = () => JSON.parse(localStorage.getItem(\"user\")) || null;\n\nconst initialState = user ? {\n  state: 'opened',\n  type: 'success',\n  message: '',\n  isLoggedIn: true,\n  user: user,\n  isAdmin: ((_user = user()) === null || _user === void 0 ? void 0 : _user.role) === AdministratorRoleName,\n  isCompanyOwner: ((_user2 = user()) === null || _user2 === void 0 ? void 0 : _user2.role) === CompanyOwnerRoleName,\n  isEmployee: ((_user3 = user()) === null || _user3 === void 0 ? void 0 : _user3.role) === EmployeeRoleName\n} : {\n  isLoggedIn: false,\n  user: null,\n  isAdmin: false,\n  isCompanyOwner: false,\n  isEmployee: false\n};\nexport default function Auth(init = initialState, action) {\n  var _user4, _user5, _user6, _user7, _user8, _user9, _user10, _user11, _user12;\n\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: true,\n        user: user(),\n        isAdmin: ((_user4 = user()) === null || _user4 === void 0 ? void 0 : _user4.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user5 = user()) === null || _user5 === void 0 ? void 0 : _user5.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user6 = user()) === null || _user6 === void 0 ? void 0 : _user6.role) === EmployeeRoleName\n      };\n\n    case REGISTER_FAIL:\n      return {\n        state: 'opened',\n        type: 'error',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: true,\n        user: user(),\n        isAdmin: ((_user7 = user()) === null || _user7 === void 0 ? void 0 : _user7.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user8 = user()) === null || _user8 === void 0 ? void 0 : _user8.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user9 = user()) === null || _user9 === void 0 ? void 0 : _user9.role) === EmployeeRoleName\n      };\n\n    case LOGIN_FAIL:\n      return {\n        state: 'opened',\n        type: 'error',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case LOGOUT:\n      return {\n        state: 'opened',\n        type: 'success',\n        message: payload,\n        isLoggedIn: false,\n        user: null\n      };\n\n    case CLEAR_MESSAGE:\n      return {\n        state: 'closed',\n        type: '',\n        message: ''\n      };\n\n    case CHECK_CURRENT_STATE:\n      return {\n        state: 'closed',\n        type: '',\n        message: '',\n        isLoggedIn: user() ? true : false,\n        user: user(),\n        isAdmin: ((_user10 = user()) === null || _user10 === void 0 ? void 0 : _user10.role) === AdministratorRoleName,\n        isCompanyOwner: ((_user11 = user()) === null || _user11 === void 0 ? void 0 : _user11.role) === CompanyOwnerRoleName,\n        isEmployee: ((_user12 = user()) === null || _user12 === void 0 ? void 0 : _user12.role) === EmployeeRoleName\n      };\n\n    default:\n      return init;\n  }\n}\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_MESSAGE","CHECK_CURRENT_STATE","AdministratorRoleName","CompanyOwnerRoleName","EmployeeRoleName","user","JSON","parse","localStorage","getItem","initialState","state","type","message","isLoggedIn","isAdmin","role","isCompanyOwner","isEmployee","Auth","init","action","payload"],"mappings":";;AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,aANF,EAOEC,mBAPF,QAQO,kBARP;AAUA,SACEC,qBADF,EAEEC,oBAFF,EAGEC,gBAHF,QAIO,uBAJP;;AAMA,MAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IAA/D;;AAEA,MAAMC,YAAY,GAAGL,IAAI,GACrB;AACGM,EAAAA,KAAK,EAAE,QADV;AAEGC,EAAAA,IAAI,EAAE,SAFT;AAGGC,EAAAA,OAAO,EAAE,EAHZ;AAIGC,EAAAA,UAAU,EAAE,IAJf;AAKGT,EAAAA,IAAI,EAAEA,IALT;AAMGU,EAAAA,OAAO,EAAE,UAAAV,IAAI,YAAJ,sCAAQW,IAAR,MAAiBd,qBAN7B;AAOGe,EAAAA,cAAc,EAAE,WAAAZ,IAAI,YAAJ,wCAAQW,IAAR,MAAiBb,oBAPpC;AAQGe,EAAAA,UAAU,EAAE,WAAAb,IAAI,YAAJ,wCAAQW,IAAR,MAAeZ;AAR9B,CADqB,GAWrB;AAAEU,EAAAA,UAAU,EAAE,KAAd;AACET,EAAAA,IAAI,EAAE,IADR;AAEEU,EAAAA,OAAO,EAAE,KAFX;AAGEE,EAAAA,cAAc,EAAE,KAHlB;AAIEC,EAAAA,UAAU,EAAE;AAJd,CAXJ;AAiBA,eAAe,SAASC,IAAT,CAAcC,IAAI,GAAGV,YAArB,EAAmCW,MAAnC,EAA2C;AAAA;;AACxD,QAAM;AAAET,IAAAA,IAAF;AAAQU,IAAAA;AAAR,MAAoBD,MAA1B;;AACA,UAAQT,IAAR;AACE,SAAKjB,gBAAL;AACE,aAAO;AACLgB,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,SAFD;AAGLC,QAAAA,OAAO,EAAES,OAHJ;AAILR,QAAAA,UAAU,EAAE,IAJP;AAKLT,QAAAA,IAAI,EAAEA,IAAI,EALL;AAMLU,QAAAA,OAAO,EAAE,WAAAV,IAAI,YAAJ,wCAAQW,IAAR,MAAiBd,qBANrB;AAOLe,QAAAA,cAAc,EAAE,WAAAZ,IAAI,YAAJ,wCAAQW,IAAR,MAAiBb,oBAP5B;AAQLe,QAAAA,UAAU,EAAE,WAAAb,IAAI,YAAJ,wCAAQW,IAAR,MAAeZ;AARtB,OAAP;;AAUF,SAAKR,aAAL;AACE,aAAO;AACLe,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,OAFD;AAGLC,QAAAA,OAAO,EAAES,OAHJ;AAILR,QAAAA,UAAU,EAAE,KAJP;AAKLT,QAAAA,IAAI,EAAE;AALD,OAAP;;AAOF,SAAKR,aAAL;AACE,aAAO;AACLc,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,SAFD;AAGLC,QAAAA,OAAO,EAAES,OAHJ;AAILR,QAAAA,UAAU,EAAE,IAJP;AAKLT,QAAAA,IAAI,EAAEA,IAAI,EALL;AAMLU,QAAAA,OAAO,EAAE,WAAAV,IAAI,YAAJ,wCAAQW,IAAR,MAAiBd,qBANrB;AAOLe,QAAAA,cAAc,EAAE,WAAAZ,IAAI,YAAJ,wCAAQW,IAAR,MAAiBb,oBAP5B;AAQLe,QAAAA,UAAU,EAAE,WAAAb,IAAI,YAAJ,wCAAQW,IAAR,MAAeZ;AARtB,OAAP;;AAUF,SAAKN,UAAL;AACE,aAAO;AACLa,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,OAFD;AAGLC,QAAAA,OAAO,EAAES,OAHJ;AAILR,QAAAA,UAAU,EAAE,KAJP;AAKLT,QAAAA,IAAI,EAAE;AALD,OAAP;;AAOF,SAAKN,MAAL;AACE,aAAO;AACLY,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,SAFD;AAGLC,QAAAA,OAAO,EAAES,OAHJ;AAILR,QAAAA,UAAU,EAAE,KAJP;AAKLT,QAAAA,IAAI,EAAE;AALD,OAAP;;AAOF,SAAKL,aAAL;AACI,aAAO;AACLW,QAAAA,KAAK,EAAE,QADF;AAELC,QAAAA,IAAI,EAAE,EAFD;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKJ,SAAKZ,mBAAL;AACI,aAAM;AACJU,QAAAA,KAAK,EAAE,QADH;AAEJC,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,OAAO,EAAE,EAHL;AAIJC,QAAAA,UAAU,EAAET,IAAI,KAAK,IAAL,GAAY,KAJxB;AAKJA,QAAAA,IAAI,EAAEA,IAAI,EALN;AAMJU,QAAAA,OAAO,EAAE,YAAAV,IAAI,YAAJ,0CAAQW,IAAR,MAAiBd,qBANtB;AAOJe,QAAAA,cAAc,EAAE,YAAAZ,IAAI,YAAJ,0CAAQW,IAAR,MAAiBb,oBAP7B;AAQJe,QAAAA,UAAU,EAAE,YAAAb,IAAI,YAAJ,0CAAQW,IAAR,MAAiBZ;AARzB,OAAN;;AAUJ;AACE,aAAOgB,IAAP;AAjEJ;AAmED;KArEuBD,I","sourcesContent":["import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_MESSAGE,\r\n  CHECK_CURRENT_STATE,\r\n} from \"../actions/types\";\r\n\r\nimport {\r\n  AdministratorRoleName,\r\n  CompanyOwnerRoleName,\r\n  EmployeeRoleName,\r\n} from '../utils/webConstants';\r\n\r\nconst user = () => JSON.parse(localStorage.getItem(\"user\")) || null;\r\n\r\nconst initialState = user\r\n  ? { \r\n       state: 'opened', \r\n       type: 'success' , \r\n       message: '', \r\n       isLoggedIn: true,\r\n       user: user,\r\n       isAdmin: user()?.role === AdministratorRoleName,\r\n       isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n       isEmployee: user()?.role===EmployeeRoleName,\r\n    }\r\n  : { isLoggedIn: false,\r\n      user: null,\r\n      isAdmin: false,\r\n      isCompanyOwner: false,\r\n      isEmployee: false};\r\n\r\nexport default function Auth(init = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' , \r\n        message: payload, \r\n        isLoggedIn: true,        \r\n        user: user(),\r\n        isAdmin: user()?.role === AdministratorRoleName,\r\n        isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n        isEmployee: user()?.role===EmployeeRoleName,\r\n      };\r\n    case REGISTER_FAIL:\r\n      return {\r\n        state: 'opened', \r\n        type: 'error' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };      \r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' ,\r\n        message: payload,\r\n        isLoggedIn: true,        \r\n        user: user(),\r\n        isAdmin: user()?.role === AdministratorRoleName,\r\n        isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n        isEmployee: user()?.role===EmployeeRoleName,\r\n      }; \r\n    case LOGIN_FAIL:\r\n      return {\r\n        state: 'opened', \r\n        type: 'error' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,        \r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        state: 'opened', \r\n        type: 'success' ,\r\n        message: payload,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case CLEAR_MESSAGE:\r\n        return {\r\n          state: 'closed',\r\n          type: '' ,\r\n          message: ''\r\n        }; \r\n    case CHECK_CURRENT_STATE:\r\n        return{\r\n          state: 'closed',\r\n          type: '',\r\n          message: '',\r\n          isLoggedIn: user() ? true : false,\r\n          user: user(),\r\n          isAdmin: user()?.role === AdministratorRoleName,\r\n          isCompanyOwner: user()?.role === CompanyOwnerRoleName,\r\n          isEmployee: user()?.role === EmployeeRoleName,\r\n        };\r\n    default:\r\n      return init;\r\n  }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}