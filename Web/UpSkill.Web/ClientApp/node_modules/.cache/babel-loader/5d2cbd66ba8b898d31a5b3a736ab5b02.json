{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./tokenService\";\nimport jwt from \"jwt-decode\";\nimport instance from \"./instance\";\nimport authHeader from './auth-header';\nimport { Base_URL } from \"../utils/baseUrlConstant\";\nconst API_URL = Base_URL + \"Identity/\";\nconst userStorageVarName = \"user\";\n\nconst register = async (firstName, lastName, companyName, email, password, confirmPassword) => {\n  return axios.post(API_URL + \"register\", {\n    firstName,\n    lastName,\n    companyName,\n    email,\n    password,\n    confirmPassword\n  });\n};\n\nconst login = async (email, password) => {\n  return axios.post(API_URL + \"login\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.token) {\n      TokenService.setUser(response.data);\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(userStorageVarName, JSON.stringify(jwt(response.data.token)));\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = async () => {\n  return await axios.post(API_URL + \"Logout\").then(res => {\n    TokenService.removeUser();\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  });\n};\n\nexport const getUser = () => JSON.parse(localStorage.getItem(userStorageVarName)) || null;\nconst identity = {\n  register,\n  login,\n  logout,\n  getUser\n};\nexport default identity;","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/auth.service.js"],"names":["axios","TokenService","jwt","instance","authHeader","Base_URL","API_URL","userStorageVarName","register","firstName","lastName","companyName","email","password","confirmPassword","post","login","then","response","data","token","setUser","localStorage","setItem","JSON","stringify","logout","res","removeUser","removeItem","getUser","parse","getItem","identity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,OAAO,GAAGD,QAAQ,GAAG,WAA3B;AACA,MAAME,kBAAkB,GAAG,MAA3B;;AAGA,MAAMC,QAAQ,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,WAA5B,EAAyCC,KAAzC,EAAgDC,QAAhD,EAA0DC,eAA1D,KAA8E;AAC7F,SAAOd,KAAK,CAACe,IAAN,CAAWT,OAAO,GAAG,UAArB,EAAiC;AACtCG,IAAAA,SADsC;AAEtCC,IAAAA,QAFsC;AAGtCC,IAAAA,WAHsC;AAItCC,IAAAA,KAJsC;AAKtCC,IAAAA,QALsC;AAMtCC,IAAAA;AANsC,GAAjC,CAAP;AAQD,CATD;;AAWA,MAAME,KAAK,GAAG,OAAOJ,KAAP,EAAcC,QAAd,KAA2B;AACvC,SAAOb,KAAK,CACTe,IADI,CACCT,OAAO,GAAG,OADX,EACoB;AACvBM,IAAAA,KADuB;AAEvBC,IAAAA;AAFuB,GADpB,EAKJI,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBnB,MAAAA,YAAY,CAACoB,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,QAAQ,CAACC,IAAT,CAAcC,KAA5C;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqBhB,kBAArB,EAAyCiB,IAAI,CAACC,SAAL,CAAevB,GAAG,CAACgB,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAlB,CAAzC;AACD;;AACD,WAAOF,QAAQ,CAACC,IAAhB;AACD,GAZI,CAAP;AAaD,CAdD;;AAgBA,MAAMO,MAAM,GAAG,YAAY;AACzB,SAAO,MAAM1B,KAAK,CACfe,IADU,CACLT,OAAO,GAAG,QADL,EAEVW,IAFU,CAEJU,GAAD,IAAS;AACX1B,IAAAA,YAAY,CAAC2B,UAAb;AACAN,IAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACAP,IAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACH,GANU,CAAb;AAOD,CARD;;AAUA,OAAO,MAAMC,OAAO,GAAG,MAAMN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqBzB,kBAArB,CAAX,KAAwD,IAA9E;AAEP,MAAM0B,QAAQ,GAAG;AACfzB,EAAAA,QADe;AAEfQ,EAAAA,KAFe;AAGfU,EAAAA,MAHe;AAIfI,EAAAA;AAJe,CAAjB;AAOA,eAAeG,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport TokenService from \"./tokenService\";\r\nimport jwt from \"jwt-decode\";\r\nimport instance from \"./instance\";\r\nimport authHeader from './auth-header';\r\n\r\nimport { Base_URL } from \"../utils/baseUrlConstant\";\r\n\r\nconst API_URL = Base_URL + \"Identity/\";\r\nconst userStorageVarName = \"user\";\r\n\r\n\r\nconst register = async (firstName, lastName, companyName, email, password, confirmPassword) => { \r\n  return axios.post(API_URL + \"register\", { \r\n    firstName,\r\n    lastName,\r\n    companyName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n  });\r\n};\r\n\r\nconst login = async (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        TokenService.setUser(response.data);\r\n        localStorage.setItem(\"token\", response.data.token)\r\n        localStorage.setItem(userStorageVarName, JSON.stringify(jwt(response.data.token)));\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = async () => {\r\n  return await axios\r\n    .post(API_URL + \"Logout\")\r\n    .then((res) => {\r\n        TokenService.removeUser();\r\n        localStorage.removeItem(\"user\");      \r\n        localStorage.removeItem(\"token\");      \r\n    });\r\n};\r\n\r\nexport const getUser = () => JSON.parse(localStorage.getItem(userStorageVarName)) || null;\r\n\r\nconst identity = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n}\r\n\r\nexport default identity;\r\n"]},"metadata":{},"sourceType":"module"}