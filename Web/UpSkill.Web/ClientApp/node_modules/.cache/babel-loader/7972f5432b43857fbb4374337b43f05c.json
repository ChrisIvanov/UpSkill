{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./tokenService\";\nimport { Base_URL } from '../utils/baseUrlConstant';\nconst API_URL = Base_URL + \"Identity/\";\n\nconst register = (firstName, lastName, companyName, email, password, confirmPassword) => {\n  return axios.post(API_URL + \"register\", {\n    firstName,\n    lastName,\n    companyName,\n    email,\n    password,\n    confirmPassword\n  });\n};\n\nconst login = (email, password) => {\n  return axios.post(API_URL + \"login\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.token) {\n      TokenService.setUser(response.data);\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  return axios.post(API_URL + \"logout\").then(res => {\n    TokenService.removeUser();\n  });\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst identity = {\n  register,\n  login,\n  logout,\n  getCurrentUser\n};\nexport default identity;","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/auth.service.js"],"names":["axios","TokenService","Base_URL","API_URL","register","firstName","lastName","companyName","email","password","confirmPassword","post","login","then","response","data","token","setUser","logout","res","removeUser","getCurrentUser","JSON","parse","localStorage","getItem","identity"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,OAAO,GAAGD,QAAQ,GAAG,WAA3B;;AAGA,MAAME,QAAQ,GAAG,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,WAAtB,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoDC,eAApD,KAAwE;AACvF,SAAOV,KAAK,CAACW,IAAN,CAAWR,OAAO,GAAG,UAArB,EAAiC;AACtCE,IAAAA,SADsC;AAEtCC,IAAAA,QAFsC;AAGtCC,IAAAA,WAHsC;AAItCC,IAAAA,KAJsC;AAKtCC,IAAAA,QALsC;AAMtCC,IAAAA;AANsC,GAAjC,CAAP;AAQD,CATD;;AAWA,MAAME,KAAK,GAAG,CAACJ,KAAD,EAAQC,QAAR,KAAqB;AACjC,SAAOT,KAAK,CACTW,IADI,CACCR,OAAO,GAAG,OADX,EACoB;AACvBK,IAAAA,KADuB;AAEvBC,IAAAA;AAFuB,GADpB,EAKJI,IALI,CAKEC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBf,MAAAA,YAAY,CAACgB,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;AACD;;AACD,WAAOD,QAAQ,CAACC,IAAhB;AACD,GAVI,CAAP;AAWD,CAZD;;AAcA,MAAMG,MAAM,GAAG,MAAM;AACnB,SAAOlB,KAAK,CACTW,IADI,CACCR,OAAO,GAAG,QADX,EAEJU,IAFI,CAEEM,GAAD,IAAS;AACXlB,IAAAA,YAAY,CAACmB,UAAb;AACH,GAJI,CAAP;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,MAAMC,QAAQ,GAAG;AACftB,EAAAA,QADe;AAEfQ,EAAAA,KAFe;AAGfM,EAAAA,MAHe;AAIfG,EAAAA;AAJe,CAAjB;AAOA,eAAeK,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport TokenService from \"./tokenService\";\r\n\r\nimport { Base_URL } from '../utils/baseUrlConstant';\r\n\r\nconst API_URL = Base_URL + \"Identity/\";\r\n\r\n\r\nconst register = (firstName, lastName, companyName, email, password, confirmPassword) => { \r\n  return axios.post(API_URL + \"register\", { \r\n    firstName,\r\n    lastName, \r\n    companyName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n  })\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        TokenService.setUser(response.data);\r\n      }\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  return axios\r\n    .post(API_URL + \"logout\")\r\n    .then((res) => {\r\n        TokenService.removeUser();\r\n    });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst identity = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n}\r\n\r\nexport default identity;\r\n"]},"metadata":{},"sourceType":"module"}