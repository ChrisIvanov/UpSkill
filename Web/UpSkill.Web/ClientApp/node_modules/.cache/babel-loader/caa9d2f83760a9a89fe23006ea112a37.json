{"ast":null,"code":"// https://docs.netlify.com/configure-builds/environment-variables/#netlify-configuration-variables\nmodule.exports = {\n  detect({\n    env\n  }) {\n    return env.NETLIFY === 'true';\n  },\n\n  configuration({\n    env\n  }) {\n    const isPr = env.PULL_REQUEST === 'true';\n    return {\n      name: 'Netlify',\n      service: 'netlify',\n      commit: env.COMMIT_REF,\n      build: env.DEPLOY_ID,\n      buildUrl: `https://app.netlify.com/sites/${env.SITE_NAME}/deploys/${env.DEPLOY_ID}`,\n      branch: isPr ? undefined : env.HEAD,\n      pr: env.REVIEW_ID,\n      isPr,\n      prBranch: isPr ? env.HEAD : undefined,\n      slug: env.REPOSITORY_URL.match(/[^/:]+\\/[^/]+?$/)[0],\n      root: env.PWD\n    };\n  }\n\n};","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/node_modules/env-ci/services/netlify.js"],"names":["module","exports","detect","env","NETLIFY","configuration","isPr","PULL_REQUEST","name","service","commit","COMMIT_REF","build","DEPLOY_ID","buildUrl","SITE_NAME","branch","undefined","HEAD","pr","REVIEW_ID","prBranch","slug","REPOSITORY_URL","match","root","PWD"],"mappings":"AAAA;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAQ;AACZ,WAAOA,GAAG,CAACC,OAAJ,KAAgB,MAAvB;AACD,GAHc;;AAIfC,EAAAA,aAAa,CAAC;AAACF,IAAAA;AAAD,GAAD,EAAQ;AACnB,UAAMG,IAAI,GAAGH,GAAG,CAACI,YAAJ,KAAqB,MAAlC;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,OAAO,EAAE,SAFJ;AAGLC,MAAAA,MAAM,EAAEP,GAAG,CAACQ,UAHP;AAILC,MAAAA,KAAK,EAAET,GAAG,CAACU,SAJN;AAKLC,MAAAA,QAAQ,EAAG,iCAAgCX,GAAG,CAACY,SAAU,YAAWZ,GAAG,CAACU,SAAU,EAL7E;AAMLG,MAAAA,MAAM,EAAEV,IAAI,GAAGW,SAAH,GAAed,GAAG,CAACe,IAN1B;AAOLC,MAAAA,EAAE,EAAEhB,GAAG,CAACiB,SAPH;AAQLd,MAAAA,IARK;AASLe,MAAAA,QAAQ,EAAEf,IAAI,GAAGH,GAAG,CAACe,IAAP,GAAcD,SATvB;AAULK,MAAAA,IAAI,EAAEnB,GAAG,CAACoB,cAAJ,CAAmBC,KAAnB,CAAyB,iBAAzB,EAA4C,CAA5C,CAVD;AAWLC,MAAAA,IAAI,EAAEtB,GAAG,CAACuB;AAXL,KAAP;AAaD;;AApBc,CAAjB","sourcesContent":["// https://docs.netlify.com/configure-builds/environment-variables/#netlify-configuration-variables\n\nmodule.exports = {\n  detect({env}) {\n    return env.NETLIFY === 'true';\n  },\n  configuration({env}) {\n    const isPr = env.PULL_REQUEST === 'true';\n\n    return {\n      name: 'Netlify',\n      service: 'netlify',\n      commit: env.COMMIT_REF,\n      build: env.DEPLOY_ID,\n      buildUrl: `https://app.netlify.com/sites/${env.SITE_NAME}/deploys/${env.DEPLOY_ID}`,\n      branch: isPr ? undefined : env.HEAD,\n      pr: env.REVIEW_ID,\n      isPr,\n      prBranch: isPr ? env.HEAD : undefined,\n      slug: env.REPOSITORY_URL.match(/[^/:]+\\/[^/]+?$/)[0],\n      root: env.PWD,\n    };\n  },\n};\n"]},"metadata":{},"sourceType":"script"}