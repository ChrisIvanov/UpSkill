{"ast":null,"code":"// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n\n/** A logger that does nothing when log messages are sent to it. */\nexport class NullLogger {\n  constructor() {}\n  /** @inheritDoc */\n  // eslint-disable-next-line\n\n\n  log(_logLevel, _message) {}\n\n}\n/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\n\nNullLogger.instance = new NullLogger();","map":{"version":3,"sources":["../../src/Loggers.ts"],"names":[],"mappings":"AAAA;AACA;;AAIA;AACA,OAAM,MAAO,UAAP,CAAiB;AAInB,EAAA,WAAA,GAAA,CAAwB;AAExB;AACA;;;AACO,EAAA,GAAG,CAAC,SAAD,EAAsB,QAAtB,EAAsC,CAC/C;;AATkB;AACnB;;AACc,UAAA,CAAA,QAAA,GAAoB,IAAI,UAAJ,EAApB","sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}