{"ast":null,"code":"var _jsxFileName = \"H:\\\\Programming Repositories\\\\Titans\\\\Web\\\\UpSkill.Web\\\\ClientApp\\\\src\\\\components\\\\Authentication\\\\Logout\\\\Logout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport notificationContext from \"../../../Context/NotificationContext\";\nimport chatContext from \"../../../Context/ChatContext\";\nimport { logout } from \"../../../actions/auth\";\nimport { LOGOUT } from \"../../../actions/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logout = props => {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  let [notification, setNotification] = useContext(notificationContext);\n  const [joinRoom, sendMessage, closeConnection, messages, setMessages, connection] = useContext(chatContext);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!isLoggedIn) {\n      props.history.push(\"/Login\");\n    }\n\n    logout().then(async () => {\n      dispatch({\n        type: LOGOUT\n      });\n      await props.history.push(\"/\");\n      localStorage.removeItem(\"user\");\n      setNotification({\n        type: 'LOGOUT',\n        payload: `Goodbye !`\n      });\n    }).catch(() => {\n      props.history.push(\"/Login\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Logout, \"TO4N4E9oRALHQU2ecy5rYSsdqpo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/components/Authentication/Logout/Logout.js"],"names":["React","useContext","useEffect","useDispatch","useSelector","notificationContext","chatContext","logout","LOGOUT","Logout","props","isLoggedIn","state","auth","notification","setNotification","joinRoom","sendMessage","closeConnection","messages","setMessages","connection","dispatch","history","push","then","type","localStorage","removeItem","payload","catch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,SAASC,MAAT,QAAuB,uBAAvB;AAEA,SACEC,MADF,QAEO,wBAFP;;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAlC;AACA,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCd,UAAU,CAACI,mBAAD,CAAhD;AACD,QAAM,CAACW,QAAD,EAAWC,WAAX,EAAwBC,eAAxB,EAAyCC,QAAzC,EAAmDC,WAAnD,EAAgEC,UAAhE,IAA8EpB,UAAU,CAACK,WAAD,CAA9F;AAEC,QAAMgB,QAAQ,GAAGnB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAK,CAACS,UAAN,EAAiB;AACbD,MAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;;AAEHjB,IAAAA,MAAM,GACHkB,IADH,CACQ,YAAY;AACdH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAClB;AADE,OAAD,CAAR;AAIA,YAAME,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,GAAnB,CAAN;AACAG,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAb,MAAAA,eAAe,CAAC;AAACW,QAAAA,IAAI,EAAC,QAAN;AAAgBG,QAAAA,OAAO,EAAG;AAA1B,OAAD,CAAf;AACD,KATL,EAUKC,KAVL,CAUW,MAAM;AACXpB,MAAAA,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KAZL;AAaD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA9BD;;GAAMf,M;UACmBL,W,EAIND,W;;;KALbM,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport notificationContext from \"../../../Context/NotificationContext\";\r\nimport chatContext from \"../../../Context/ChatContext\";\r\n\r\nimport { logout } from \"../../../actions/auth\";  \r\n\r\nimport {\r\n  LOGOUT,\r\n} from \"../../../actions/types\";\r\n\r\nconst Logout = (props) => {\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n  let [notification, setNotification] = useContext(notificationContext);\r\n\tconst [joinRoom, sendMessage, closeConnection, messages, setMessages, connection] = useContext(chatContext);\t\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if  (!isLoggedIn){\r\n        props.history.push(\"/Login\");        \r\n      }\r\n    \r\n    logout()\r\n      .then(async () => { \r\n          dispatch({\r\n            type:LOGOUT,\r\n          });\r\n\r\n          await props.history.push(\"/\");\r\n          localStorage.removeItem(\"user\");                \r\n          setNotification({type:'LOGOUT', payload: `Goodbye !`});\r\n        })\r\n        .catch(() => {\r\n          props.history.push(\"/Login\");\r\n        });\r\n  }, []);\r\n   \r\n  return (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default Logout;"]},"metadata":{},"sourceType":"module"}