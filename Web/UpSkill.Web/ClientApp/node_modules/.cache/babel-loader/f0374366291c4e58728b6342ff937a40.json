{"ast":null,"code":"import axios from 'axios';\nimport { Base_URL } from '../utils/baseUrlConstant';\nconst EMP_API_URL = Base_URL + 'Employee/Courses/';\nconst OWN_API_URL = Base_URL + 'Owner/Employee/';\nconst token = localStorage.getItem('token');\nlet data = [];\nexport const getCourses = (courseId, courseTitle, courseCoachFirstName, courseCoachLastName, courseFileFilePath) => {\n  return axios.get(EMP_API_URL + 'getAll', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }, {\n    courseId,\n    courseTitle,\n    courseCoachFirstName,\n    courseCoachLastName,\n    courseFileFilePath\n  }).then(response => {\n    data = response.data;\n    return data;\n  });\n};\nconst numberEmployeesToShow = 3;\nlet employees = [];\nexport const getEmployeeWithEmail = async currentPage => {\n  getAllEmployees();\n  let arr = [];\n  arr.push(...employees.slice(0, currentPage * numberEmployeesToShow + numberEmployeesToShow));\n  return arr;\n};\nexport const getEmployeesTotalCountCompanyOwner = async uId => {\n  await getAllEmployees();\n  return employees.length;\n};\nexport const getAllEmployees = async employee => {\n  return axios.get(OWN_API_URL + 'getAllEmployees', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }, {\n    employee\n  }).then(response => {\n    employees = [];\n    response.data.map(x => employees.push(x));\n    return employees;\n  });\n};\nexport const removeEmployeeHandler = async id => {\n  console.log(id);\n  return await axios.delete(Base_URL + `Owner/Employee?id=${id}`);\n};\nconst ownerEmployeesMock = [{\n  id: 1,\n  name: 'Joe Peshi',\n  email: 'joe@joe.com'\n}, {\n  id: 2,\n  name: 'Brat Pitt',\n  email: 'bratPitt@abv.bg'\n}, {\n  id: 3,\n  name: 'Ceca Pevicata',\n  email: 'peiaPesen@sanemoa.com'\n}];","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/employeeService.js"],"names":["axios","Base_URL","EMP_API_URL","OWN_API_URL","token","localStorage","getItem","data","getCourses","courseId","courseTitle","courseCoachFirstName","courseCoachLastName","courseFileFilePath","get","headers","Authorization","then","response","numberEmployeesToShow","employees","getEmployeeWithEmail","currentPage","getAllEmployees","arr","push","slice","getEmployeesTotalCountCompanyOwner","uId","length","employee","map","x","removeEmployeeHandler","id","console","log","delete","ownerEmployeesMock","name","email"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,WAAW,GAAGD,QAAQ,GAAG,mBAA/B;AACA,MAAME,WAAW,GAAGF,QAAQ,GAAG,iBAA/B;AAEA,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,IAAIC,IAAI,GAAG,EAAX;AAEA,OAAO,MAAMC,UAAU,GAAG,CACxBC,QADwB,EAExBC,WAFwB,EAGxBC,oBAHwB,EAIxBC,mBAJwB,EAKxBC,kBALwB,KAMrB;AACH,SAAOb,KAAK,CACTc,GADI,CAEHZ,WAAW,GAAG,QAFX,EAGH;AAAEa,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAAjC;AAAX,GAHG,EAIH;AACEK,IAAAA,QADF;AAEEC,IAAAA,WAFF;AAGEC,IAAAA,oBAHF;AAIEC,IAAAA,mBAJF;AAKEC,IAAAA;AALF,GAJG,EAYJI,IAZI,CAYEC,QAAD,IAAc;AAClBX,IAAAA,IAAI,GAAGW,QAAQ,CAACX,IAAhB;AACA,WAAOA,IAAP;AACD,GAfI,CAAP;AAgBD,CAvBM;AAyBP,MAAMY,qBAAqB,GAAG,CAA9B;AACA,IAAIC,SAAS,GAAG,EAAhB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,WAAP,IAAuB;AACzDC,EAAAA,eAAe;AAEf,MAAIC,GAAG,GAAG,EAAV;AACAA,EAAAA,GAAG,CAACC,IAAJ,CACE,GAAGL,SAAS,CAACM,KAAV,CACD,CADC,EAEDJ,WAAW,GAAGH,qBAAd,GAAsCA,qBAFrC,CADL;AAOA,SAAOK,GAAP;AACD,CAZM;AAcP,OAAO,MAAMG,kCAAkC,GAAG,MAAOC,GAAP,IAAe;AAC/D,QAAML,eAAe,EAArB;AACA,SAAOH,SAAS,CAACS,MAAjB;AACD,CAHM;AAKP,OAAO,MAAMN,eAAe,GAAG,MAAOO,QAAP,IAAoB;AACjD,SAAO9B,KAAK,CACTc,GADI,CAEHX,WAAW,GAAG,iBAFX,EAGH;AAAEY,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAAUZ,KAAO;AAAnC;AAAX,GAHG,EAIH;AAAE0B,IAAAA;AAAF,GAJG,EAMJb,IANI,CAMEC,QAAD,IAAc;AAClBE,IAAAA,SAAS,GAAG,EAAZ;AACAF,IAAAA,QAAQ,CAACX,IAAT,CAAcwB,GAAd,CAAmBC,CAAD,IAAOZ,SAAS,CAACK,IAAV,CAAeO,CAAf,CAAzB;AACA,WAAOZ,SAAP;AACD,GAVI,CAAP;AAWD,CAZM;AAcP,OAAO,MAAMa,qBAAqB,GAAG,MAAOC,EAAP,IAAc;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAaF,EAAb;AACA,SAAO,MAAMlC,KAAK,CAACqC,MAAN,CAAapC,QAAQ,GAAI,qBAAqBiC,EAAI,EAAlD,CAAb;AACD,CAHM;AAKP,MAAMI,kBAAkB,GAAG,CACzB;AAAEJ,EAAAA,EAAE,EAAE,CAAN;AAASK,EAAAA,IAAI,EAAE,WAAf;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CADyB,EAEzB;AAAEN,EAAAA,EAAE,EAAE,CAAN;AAASK,EAAAA,IAAI,EAAE,WAAf;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAFyB,EAGzB;AAAEN,EAAAA,EAAE,EAAE,CAAN;AAASK,EAAAA,IAAI,EAAE,eAAf;AAAgCC,EAAAA,KAAK,EAAE;AAAvC,CAHyB,CAA3B","sourcesContent":["import axios from 'axios';\r\nimport { Base_URL } from '../utils/baseUrlConstant';\r\n\r\nconst EMP_API_URL = Base_URL + 'Employee/Courses/';\r\nconst OWN_API_URL = Base_URL + 'Owner/Employee/';\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nlet data = [];\r\n\r\nexport const getCourses = (\r\n  courseId,\r\n  courseTitle,\r\n  courseCoachFirstName,\r\n  courseCoachLastName,\r\n  courseFileFilePath\r\n) => {\r\n  return axios\r\n    .get(\r\n      EMP_API_URL + 'getAll',\r\n      { headers: { Authorization: `Bearer ${token}` }},\r\n      {\r\n        courseId,\r\n        courseTitle,\r\n        courseCoachFirstName,\r\n        courseCoachLastName,\r\n        courseFileFilePath,\r\n      }\r\n    )\r\n    .then((response) => {\r\n      data = response.data;\r\n      return data;\r\n    });\r\n};\r\n\r\nconst numberEmployeesToShow = 3;\r\nlet employees = [];\r\n\r\nexport const getEmployeeWithEmail = async (currentPage) => {\r\n  getAllEmployees();\r\n\r\n  let arr = [];\r\n  arr.push(\r\n    ...employees.slice(\r\n      0,\r\n      currentPage * numberEmployeesToShow + numberEmployeesToShow\r\n    )\r\n  );\r\n\r\n  return arr;\r\n};\r\n\r\nexport const getEmployeesTotalCountCompanyOwner = async (uId) => {\r\n  await getAllEmployees();\r\n  return employees.length;\r\n};\r\n\r\nexport const getAllEmployees = async (employee) => {\r\n  return axios\r\n    .get(\r\n      OWN_API_URL + 'getAllEmployees',\r\n      { headers: { Authorization: `Bearer ${ token }` } },\r\n      { employee }\r\n    )\r\n    .then((response) => {\r\n      employees = [];\r\n      response.data.map((x) => employees.push(x));\r\n      return employees;\r\n    });\r\n};\r\n\r\nexport const removeEmployeeHandler = async (id) => {\r\n  console.log( id );\r\n  return await axios.delete(Base_URL + `Owner/Employee?id=${ id }`);\r\n};\r\n\r\nconst ownerEmployeesMock = [\r\n  { id: 1, name: 'Joe Peshi', email: 'joe@joe.com' },\r\n  { id: 2, name: 'Brat Pitt', email: 'bratPitt@abv.bg' },\r\n  { id: 3, name: 'Ceca Pevicata', email: 'peiaPesen@sanemoa.com' }\r\n];\r\n"]},"metadata":{},"sourceType":"module"}