{"ast":null,"code":"const activeCoursesCompanyOwnerCount = 8;\nconst numberCoursesToShow = 3;\nconst coursesCompanyOwnerMock = [{\n  id: '8',\n  name: 'August',\n  courses: [{\n    name: 'Python',\n    enrolled: 6\n  }, {\n    name: 'Ruby',\n    enrolled: 5\n  }, {\n    name: 'C++',\n    enrolled: 18\n  }, {\n    name: 'C#',\n    enrolled: 5\n  }, {\n    name: 'Java',\n    enrolled: 3\n  }]\n}, {\n  id: '9',\n  name: 'September',\n  courses: [{\n    name: 'HTML',\n    enrolled: 4\n  }, {\n    name: 'CSS',\n    enrolled: 7\n  }, {\n    name: 'JS',\n    enrolled: 13\n  }, {\n    name: 'C#',\n    enrolled: 8\n  }]\n}, {\n  id: '10',\n  name: 'October',\n  courses: [{\n    name: 'TypeScript',\n    enrolled: 9\n  }, {\n    name: 'Java',\n    enrolled: 1\n  }, {\n    name: 'JS',\n    enrolled: 3\n  }]\n}];\nexport const getActiveCoursesCompanyOwner = async uId => {\n  return activeCoursesCompanyOwnerCount;\n};\nexport const getCoursesForCompanyOwner = async (uId, currentPage, currentMonth) => {\n  let month = coursesCompanyOwnerMock.filter(m => m.id == currentMonth)[0];\n  let arr = month.courses.slice(0, currentPage * numberCoursesToShow + numberCoursesToShow);\n  return [month.name, arr];\n};","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/src/services/courseSevice.js"],"names":["activeCoursesCompanyOwnerCount","numberCoursesToShow","coursesCompanyOwnerMock","id","name","courses","enrolled","getActiveCoursesCompanyOwner","uId","getCoursesForCompanyOwner","currentPage","currentMonth","month","filter","m","arr","slice"],"mappings":"AAAA,MAAMA,8BAA8B,GAAG,CAAvC;AACA,MAAMC,mBAAmB,GAAG,CAA5B;AAEA,MAAMC,uBAAuB,GAAG,CAChC;AAAEC,EAAAA,EAAE,EAAC,GAAL;AAAUC,EAAAA,IAAI,EAAE,QAAhB;AAA0BC,EAAAA,OAAO,EAAE,CAC3B;AAAED,IAAAA,IAAI,EAAE,QAAR;AAAkBE,IAAAA,QAAQ,EAAE;AAA5B,GAD2B,EAE3B;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAF2B,EAG3B;AAAEF,IAAAA,IAAI,EAAE,KAAR;AAAeE,IAAAA,QAAQ,EAAE;AAAzB,GAH2B,EAI3B;AAAEF,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,QAAQ,EAAE;AAAxB,GAJ2B,EAK3B;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAL2B;AAAnC,CADgC,EAQhC;AAACH,EAAAA,EAAE,EAAC,GAAJ;AAASC,EAAAA,IAAI,EAAE,WAAf;AAA4BC,EAAAA,OAAO,EAAE,CACjC;AAAED,IAAAA,IAAI,EAAE,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GADiC,EAEjC;AAAEF,IAAAA,IAAI,EAAE,KAAR;AAAeE,IAAAA,QAAQ,EAAE;AAAzB,GAFiC,EAGjC;AAAEF,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,QAAQ,EAAE;AAAxB,GAHiC,EAIjC;AAAEF,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,QAAQ,EAAE;AAAxB,GAJiC;AAArC,CARgC,EAchC;AAACH,EAAAA,EAAE,EAAC,IAAJ;AAAUC,EAAAA,IAAI,EAAE,SAAhB;AAA2BC,EAAAA,OAAO,EAAE,CAChC;AAAED,IAAAA,IAAI,EAAE,YAAR;AAAsBE,IAAAA,QAAQ,EAAE;AAAhC,GADgC,EAEhC;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBE,IAAAA,QAAQ,EAAE;AAA1B,GAFgC,EAGhC;AAAEF,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,QAAQ,EAAE;AAAxB,GAHgC;AAApC,CAdgC,CAAhC;AAoBA,OAAO,MAAMC,4BAA4B,GAAG,MAAOC,GAAP,IAAe;AAEvD,SAAOR,8BAAP;AACH,CAHM;AAKP,OAAO,MAAMS,yBAAyB,GAAG,OAAOD,GAAP,EAAYE,WAAZ,EAAyBC,YAAzB,KAA0C;AAC/E,MAAIC,KAAK,GAAGV,uBAAuB,CAACW,MAAxB,CAA+BC,CAAC,IAAGA,CAAC,CAACX,EAAF,IAAQQ,YAA3C,EAAyD,CAAzD,CAAZ;AACA,MAAII,GAAG,GAAGH,KAAK,CAACP,OAAN,CACLW,KADK,CACC,CADD,EACIN,WAAW,GAAGT,mBAAd,GAAoCA,mBADxC,CAAV;AAGD,SAAO,CAACW,KAAK,CAACR,IAAP,EAAaW,GAAb,CAAP;AACF,CANM","sourcesContent":["const activeCoursesCompanyOwnerCount = 8;\r\nconst numberCoursesToShow = 3;\r\n\r\nconst coursesCompanyOwnerMock = [\r\n{ id:'8', name: 'August', courses: [\r\n        { name: 'Python', enrolled: 6 },\r\n        { name: 'Ruby', enrolled: 5 },\r\n        { name: 'C++', enrolled: 18 },\r\n        { name: 'C#', enrolled: 5 },\r\n        { name: 'Java', enrolled: 3 }\r\n]},\r\n{id:'9', name: 'September', courses: [\r\n    { name: 'HTML', enrolled: 4 },\r\n    { name: 'CSS', enrolled: 7 },\r\n    { name: 'JS', enrolled: 13 },\r\n    { name: 'C#', enrolled: 8 }\r\n]},\r\n{id:'10', name: 'October', courses: [\r\n    { name: 'TypeScript', enrolled: 9 },\r\n    { name: 'Java', enrolled: 1 },\r\n    { name: 'JS', enrolled: 3 }\r\n]}];\r\n\r\nexport const getActiveCoursesCompanyOwner = async (uId) => {\r\n              \r\n    return activeCoursesCompanyOwnerCount;\r\n}\r\n\r\nexport const getCoursesForCompanyOwner = async (uId, currentPage, currentMonth) => {\r\n    let month = coursesCompanyOwnerMock.filter(m=> m.id == currentMonth)[0];\r\n    let arr = month.courses\r\n        .slice(0, currentPage * numberCoursesToShow + numberCoursesToShow);    \r\n    \r\n   return [month.name, arr];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}