{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst tslib_1 = require(\"tslib\");\n\nconst errors_1 = require(\"@oclif/errors\");\n\nconst chalk_1 = tslib_1.__importDefault(require(\"chalk\"));\n\nconst config_1 = tslib_1.__importDefault(require(\"./config\"));\n\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\n\nfunction normal(options, retries = 100) {\n  if (retries < 0) throw new Error('no input');\n  return new Promise((resolve, reject) => {\n    let timer;\n\n    if (options.timeout) {\n      timer = setTimeout(() => {\n        process.stdin.pause();\n        reject(new Error('Prompt timeout'));\n      }, options.timeout);\n      timer.unref();\n    }\n\n    process.stdin.setEncoding('utf8');\n    process.stderr.write(options.prompt);\n    process.stdin.resume();\n    process.stdin.once('data', data => {\n      if (timer) clearTimeout(timer);\n      process.stdin.pause();\n      data = data.trim();\n\n      if (!options.default && options.required && data === '') {\n        resolve(normal(options, retries - 1));\n      } else {\n        resolve(data || options.default);\n      }\n    });\n  });\n}\n\nfunction getPrompt(name, type, defaultValue) {\n  let prompt = '> ';\n\n  if (defaultValue && type === 'hide') {\n    defaultValue = '*'.repeat(defaultValue.length);\n  }\n\n  if (name && defaultValue) prompt = name + ' ' + chalk_1.default.yellow('[' + defaultValue + ']') + ': ';else if (name) prompt = `${name}: `;\n  return prompt;\n}\n\nasync function single(options) {\n  var _a;\n\n  const raw = process.stdin.isRaw;\n  if (process.stdin.setRawMode) process.stdin.setRawMode(true);\n  options.required = (_a = options.required) !== null && _a !== void 0 ? _a : false;\n  const response = await normal(options);\n  if (process.stdin.setRawMode) process.stdin.setRawMode(Boolean(raw));\n  return response;\n}\n\nfunction replacePrompt(prompt) {\n  process.stderr.write(deps_1.default.ansiEscapes.cursorHide + deps_1.default.ansiEscapes.cursorUp(1) + deps_1.default.ansiEscapes.cursorLeft + prompt + deps_1.default.ansiEscapes.cursorDown(1) + deps_1.default.ansiEscapes.cursorLeft + deps_1.default.ansiEscapes.cursorShow);\n}\n\nfunction _prompt(name, inputOptions = {}) {\n  const prompt = getPrompt(name, inputOptions.type, inputOptions.default);\n  const options = Object.assign({\n    isTTY: Boolean(process.env.TERM !== 'dumb' && process.stdin.isTTY),\n    name,\n    prompt,\n    type: 'normal',\n    required: true,\n    default: ''\n  }, inputOptions);\n\n  switch (options.type) {\n    case 'normal':\n      return normal(options);\n\n    case 'single':\n      return single(options);\n\n    case 'mask':\n      return deps_1.default.passwordPrompt(options.prompt, {\n        method: options.type,\n        required: options.required,\n        default: options.default\n      }).then(value => {\n        replacePrompt(getPrompt(name, 'hide', inputOptions.default));\n        return value;\n      });\n\n    case 'hide':\n      return deps_1.default.passwordPrompt(options.prompt, {\n        method: options.type,\n        required: options.required,\n        default: options.default\n      });\n\n    default:\n      throw new Error(`unexpected type ${options.type}`);\n  }\n}\n/**\n * prompt for input\n */\n\n\nfunction prompt(name, options = {}) {\n  return config_1.default.action.pauseAsync(() => {\n    return _prompt(name, options);\n  }, chalk_1.default.cyan('?'));\n}\n\nexports.prompt = prompt;\n/**\n * confirmation prompt (yes/no)\n */\n\nfunction confirm(message) {\n  return config_1.default.action.pauseAsync(async () => {\n    const confirm = async () => {\n      const response = (await _prompt(message)).toLowerCase();\n      if (['n', 'no'].includes(response)) return false;\n      if (['y', 'yes'].includes(response)) return true;\n      return confirm();\n    };\n\n    return confirm();\n  }, chalk_1.default.cyan('?'));\n}\n\nexports.confirm = confirm;\n/**\n * \"press anykey to continue\"\n */\n\nasync function anykey(message) {\n  const tty = Boolean(process.stdin.setRawMode);\n\n  if (!message) {\n    message = tty ? `Press any key to continue or ${chalk_1.default.yellow('q')} to exit` : `Press enter to continue or ${chalk_1.default.yellow('q')} to exit`;\n  }\n\n  const char = await prompt(message, {\n    type: 'single',\n    required: false\n  });\n  if (tty) process.stderr.write('\\n');\n  if (char === 'q') errors_1.error('quit');\n  if (char === '\\u0003') errors_1.error('ctrl-c');\n  return char;\n}\n\nexports.anykey = anykey;","map":{"version":3,"sources":["H:/Programming Repositories/Titans/Web/UpSkill.Web/ClientApp/node_modules/cli-ux/lib/prompt.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","errors_1","chalk_1","__importDefault","config_1","deps_1","normal","options","retries","Error","Promise","resolve","reject","timer","timeout","setTimeout","process","stdin","pause","unref","setEncoding","stderr","write","prompt","resume","once","data","clearTimeout","trim","default","required","getPrompt","name","type","defaultValue","repeat","length","yellow","single","_a","raw","isRaw","setRawMode","response","Boolean","replacePrompt","ansiEscapes","cursorHide","cursorUp","cursorLeft","cursorDown","cursorShow","_prompt","inputOptions","assign","isTTY","env","TERM","passwordPrompt","method","then","action","pauseAsync","cyan","confirm","message","toLowerCase","includes","anykey","tty","char","error"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst errors_1 = require(\"@oclif/errors\");\nconst chalk_1 = tslib_1.__importDefault(require(\"chalk\"));\nconst config_1 = tslib_1.__importDefault(require(\"./config\"));\nconst deps_1 = tslib_1.__importDefault(require(\"./deps\"));\nfunction normal(options, retries = 100) {\n    if (retries < 0)\n        throw new Error('no input');\n    return new Promise((resolve, reject) => {\n        let timer;\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                process.stdin.pause();\n                reject(new Error('Prompt timeout'));\n            }, options.timeout);\n            timer.unref();\n        }\n        process.stdin.setEncoding('utf8');\n        process.stderr.write(options.prompt);\n        process.stdin.resume();\n        process.stdin.once('data', data => {\n            if (timer)\n                clearTimeout(timer);\n            process.stdin.pause();\n            data = data.trim();\n            if (!options.default && options.required && data === '') {\n                resolve(normal(options, retries - 1));\n            }\n            else {\n                resolve(data || options.default);\n            }\n        });\n    });\n}\nfunction getPrompt(name, type, defaultValue) {\n    let prompt = '> ';\n    if (defaultValue && type === 'hide') {\n        defaultValue = '*'.repeat(defaultValue.length);\n    }\n    if (name && defaultValue)\n        prompt = name + ' ' + chalk_1.default.yellow('[' + defaultValue + ']') + ': ';\n    else if (name)\n        prompt = `${name}: `;\n    return prompt;\n}\nasync function single(options) {\n    var _a;\n    const raw = process.stdin.isRaw;\n    if (process.stdin.setRawMode)\n        process.stdin.setRawMode(true);\n    options.required = (_a = options.required) !== null && _a !== void 0 ? _a : false;\n    const response = await normal(options);\n    if (process.stdin.setRawMode)\n        process.stdin.setRawMode(Boolean(raw));\n    return response;\n}\nfunction replacePrompt(prompt) {\n    process.stderr.write(deps_1.default.ansiEscapes.cursorHide + deps_1.default.ansiEscapes.cursorUp(1) + deps_1.default.ansiEscapes.cursorLeft + prompt +\n        deps_1.default.ansiEscapes.cursorDown(1) + deps_1.default.ansiEscapes.cursorLeft + deps_1.default.ansiEscapes.cursorShow);\n}\nfunction _prompt(name, inputOptions = {}) {\n    const prompt = getPrompt(name, inputOptions.type, inputOptions.default);\n    const options = Object.assign({ isTTY: Boolean(process.env.TERM !== 'dumb' && process.stdin.isTTY), name,\n        prompt, type: 'normal', required: true, default: '' }, inputOptions);\n    switch (options.type) {\n        case 'normal':\n            return normal(options);\n        case 'single':\n            return single(options);\n        case 'mask':\n            return deps_1.default.passwordPrompt(options.prompt, {\n                method: options.type,\n                required: options.required,\n                default: options.default,\n            }).then((value) => {\n                replacePrompt(getPrompt(name, 'hide', inputOptions.default));\n                return value;\n            });\n        case 'hide':\n            return deps_1.default.passwordPrompt(options.prompt, {\n                method: options.type,\n                required: options.required,\n                default: options.default,\n            });\n        default:\n            throw new Error(`unexpected type ${options.type}`);\n    }\n}\n/**\n * prompt for input\n */\nfunction prompt(name, options = {}) {\n    return config_1.default.action.pauseAsync(() => {\n        return _prompt(name, options);\n    }, chalk_1.default.cyan('?'));\n}\nexports.prompt = prompt;\n/**\n * confirmation prompt (yes/no)\n */\nfunction confirm(message) {\n    return config_1.default.action.pauseAsync(async () => {\n        const confirm = async () => {\n            const response = (await _prompt(message)).toLowerCase();\n            if (['n', 'no'].includes(response))\n                return false;\n            if (['y', 'yes'].includes(response))\n                return true;\n            return confirm();\n        };\n        return confirm();\n    }, chalk_1.default.cyan('?'));\n}\nexports.confirm = confirm;\n/**\n * \"press anykey to continue\"\n */\nasync function anykey(message) {\n    const tty = Boolean(process.stdin.setRawMode);\n    if (!message) {\n        message = tty ?\n            `Press any key to continue or ${chalk_1.default.yellow('q')} to exit` :\n            `Press enter to continue or ${chalk_1.default.yellow('q')} to exit`;\n    }\n    const char = await prompt(message, { type: 'single', required: false });\n    if (tty)\n        process.stderr.write('\\n');\n    if (char === 'q')\n        errors_1.error('quit');\n    if (char === '\\u0003')\n        errors_1.error('ctrl-c');\n    return char;\n}\nexports.anykey = anykey;\n"]},"metadata":{},"sourceType":"script"}